# Transforming Data

```{r}
#| include=FALSE

library(RColorBrewer)
library(knitr)
library(tidyverse)
library(imagic)
library(broman)

library(mosaic)

library(DT)
library(dygraphs)
library(xts)

library(gt)
library(gtExtras)


```

In this Chapter we describe, and show the `code`, on how to transform data into a usable selection; a sub-set of information from the database that can be used to create: 

* summary statistics
* tables of information
* Time series graphs etc..

_this is can be considered as part of __transform__ shown in @fig-dataschem.

The sub-set of information, the selection of data, is created by:  

* filtering the database for a single determinand or sample location   
* selecting data between a date range   


## Filtering Data 


The water quality database, `wtw_data` in the `imagic` package, contain measurements: 

* at various Water Treatment Works (WTW)   
* for a range of determinands  
* over periods of time


To create summary statistics and visualisation for individual (or groups of) determinands and select periods of time we _filter_ the `database`  so only the required  information is left.  

The _Dynamic Table_ below shows the `wtw_data` filtered for the `Conductivity` determinand at the `Rivendell WTW` water treatment works.  


```{r}
# filter the wtw_data with the filter function and the dplyr package
riven_cond_data <- wtw_data %>% 
  filter(Description == "Rivendell WTW", Determinand == "Conductivity") 

# show the data with datatable function from the DT package
DT::datatable(riven_cond_data, options = list(pageLength = 5), caption = 'Conductivity at Rivendell WTW')

```
In the filtered data `riven_cond_data` we can see that there are now `r add_commas(nrow(riven_cond_data))` observations from a total of `r add_commas(nrow(wtw_data))` in the original database `wtw_data`. All the `riven_cond_data` is shown in the dynamic Table below.  

## Summary Statistics

The list of data in the Table above is not very informative (if only because it is difficult to see all the data at one time); to gain a better understanding of the `Conductivity` data, summary statistics can be produced. The code below uses the `mosaic` package to calculate some _favourite_ stats using the function `favstats`; the summary statistics for the `Conductivity` for `Rivendell WTW` is shown in @tbl-sumstats.


```{r}
#| label: tbl-sumstats
#| tbl-cap: "Summary Statistcs for Conductivity at Rivendell WTW"

# The summary statistics are saved into a variable riven_cond_stats 
riven_cond_stats <- favstats(~Result, data = riven_cond_data)

# riven_cond_stats is made into a the table (using the code below)
riven_cond_stats %>% 
  # Create the table with the gt package
  gt() %>% 
  # Style the header to black fill and white text
  tab_style(
    style = list(
      cell_fill(color = "black"),
      cell_text(color = "white", weight = "bold")),
    locations = cells_column_labels(
      columns = c(everything())
    )
  )

```

Summary statistics for the `Conductivity` for all WTW is shown in @tbl-wtwcond and to make the table easier to read, the median column is highlighted with a graduated colour scale.

```{r}
#| label: tbl-wtwcond
#| tbl-cap: "Summary Statistcs for Conductivity at All WTW"
#| warning: false

cond_data <- wtw_data %>% 
  filter(Determinand == "Conductivity") %>% 
  mutate(Description = factor(Description))

# The summary statistics are saved into a variable riven_cond_stats 
cond_stats <- favstats(Result~Description, data = cond_data)

# riven_cond_stats is made into a the table (using the code below)
cond_stats %>% 
  # Create the table with the gt package
  gt() %>% 
  # Style the header to black fill and white text
  tab_style(
    style = list(
      cell_fill(color = "black"),
      cell_text(color = "white", weight = "bold")),
    locations = cells_column_labels(
      columns = c(everything())
    )
  ) %>% 
  gt_color_rows(median, palette = "ggsci::blue_material")

```




## Data Time Series  

A key aspect of _data science_ is visualisation, especially the initial visualisation. @fig-timecond shows the `Conductivity` for `Rivendell WTW` as a times series plot; the graph is also interactive so it can be _zoomed_ to show specific time periods and the mouse can hover on individual points to reveal the date and value.

```{r}
#| label: fig-timecond
#| fig-cap: "Interactive Time Series Graph of the Conductivity for Rivendell WTW"

# Make two separate vectors of the date and result (arranged by the date)
date_column <- riven_cond_data %>% 
    select(Sample_Date, Result) %>% 
    arrange(Sample_Date) %>% 
    pull(Sample_Date)

result_column <- riven_cond_data %>% 
    select(Sample_Date, Result) %>% 
    arrange(Sample_Date) %>% 
    pull(Result) 

# Create a time-series object
cond_time_series <- xts(x=result_column, order.by=date_column)


dygraph(cond_time_series, ylab = "Conductivity (mS/m)") %>%
  dyRangeSelector() %>% 
  dyOptions(colors = RColorBrewer::brewer.pal(3, "Dark2")) %>% 
  dyHighlight(highlightCircleSize = 5, 
              highlightSeriesBackgroundAlpha = 0.2,
              hideOnMouseOut = FALSE)

```




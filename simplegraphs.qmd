# Graphs of Time {#ChapSGraphs}


```{r}
#| include=FALSE

library(tidyverse)
library(RColorBrewer)
library(ggthemes)
library(scales)
library(knitr)
library(scales)
library(imagic)
library(glue)
library(xts)
library(dygraphs)
library(ggsci)

```



This chapter illustrates the range of graphs that can help describe the hidden relationships in the drinking water quality data over time.  

## Scatter Plots

### Determinand on a Linear Scale 

An example determinand time line using a linear scale is shown in @fig-timeline1 for temperature at _Mirkwood WTW_. Temperatures would normally be plotted using a linear scale; other determinands that would _generally_ be plotted on a linear scale are:

* pH  
* Free Chlorine 
* Total Chlorine
* Colour  
* Conductivity  
* Turbidity

```{r}
#| label: fig-timeline1
#| fig-cap: "Example Time Line Plot on a Linear Scale"

# filter the wtw_data with the filter function and the dplyr package
mirkwood_temp_data <- wtw_data %>%
  filter(Description == "Mirkwood WTW", Determinand == "Temperature")

ggplot(mirkwood_temp_data, aes(x = Sample_Date, y = Result)) +
  geom_point(size = 1, alpha = 0.9, colour = "steelblue") +
  labs(y = "Temperature (\u00B0C)") +
  scale_x_date(breaks = date_breaks("1 year"), labels = date_format("%Y")) +
  facet_grid(Description ~ .) +
  theme_bw() +
  theme(legend.position = "none") +
  theme(axis.text.x = element_text(angle = 270, hjust = 1)) +
  theme(axis.title.x = element_blank())

```

### Determinand on a Log Scale  

An example determinand time line using a log scale is shown in @fig-timeline2 for _Colony Count 21Â°C_ at _Mirkwood WTW_. By convention, and clarity, microbiological determinands are displayed on a log10 scale.


```{r}
#| label: fig-timeline2
#| fig-cap: "Example Time Line Plot on a Log10 Scale"
#| warning: false

# filter the wtw_data with the filter function and the dplyr package
mirkwood_CC_data <- wtw_data %>%
  filter(Description == "Mirkwood WTW", Determinand == "Colony Count 21")

ggplot(mirkwood_CC_data, aes(x = Sample_Date, y = Result)) +
  geom_point(size = 1, alpha = 0.9, colour = "yellow4") +
  labs(y = "Colony Count 21\u00B0C (mL)") +
  scale_x_date(breaks = date_breaks("1 year"), labels = date_format("%Y")) +
  scale_y_log10(
    breaks = scales::trans_breaks("log10", function(x) 10^x),
    labels = scales::trans_format("log10", scales::math_format(10^.x))
  ) +
  facet_grid(Description ~ .) +
  theme_bw() +
  theme(legend.position = "none") +
  theme(axis.text.x = element_text(angle = 270, hjust = 1)) +
  theme(axis.title.x = element_blank()) +
  annotation_logticks(sides = "rl")

```


## Area Graphs  

@fig-timeline3 shows an area graph for Chlorine (Free and Combined) at the Mirkwood WTW.  The data is plotted with the htmlwidget[^1] _dygraphs_[^2].  The `wtw_data` in the `imagic` package is filtered for free and total chlorine at the Mirkwood WTW; combined chlorine is then calculated with the formula:

$$
Combined_{Cl} = Total_{Cl} - Free_{Cl}
$$
The data is then made into a time series object using the `xts` package before plotting in _dygraphs_.

[^1]: for available html widgets see <https://www.htmlwidgets.org/>.
[^2]: dygraphs is a JavaScript charting library providing rich facilities for charting time-series data in R <https://rstudio.github.io/dygraphs/>.

```{r}
#| label: fig-timeline3
#| fig-cap: "Example Time Line for Combined and Free Chlorine as an Interactive Area Graph"
#| warning: false

#http://rstudio.github.io/dygraphs/


mirkwood_Chlorine_data <- wtw_data %>%
  filter(Description == "Mirkwood WTW", 
         Determinand == "Free Chlorine" | Determinand == "Total Chlorine") %>% 
  select(Sample_Date, Determinand, Result) %>% 
  group_by(Sample_Date, Determinand) %>% 
  summarise(chlorine = median(Result, na.rm = T)) %>% 
  ungroup() %>% 
  pivot_wider(names_from = "Determinand", values_from = "chlorine") %>% 
  mutate(`Combined Chloine` = `Total Chlorine` - `Free Chlorine`)

date_column <- mirkwood_Chlorine_data %>% 
    select(Sample_Date, Free = `Free Chlorine`, Combined = `Combined Chloine`) %>% 
    arrange(Sample_Date) %>% 
    pull(Sample_Date)

free_column <- mirkwood_Chlorine_data %>% 
   select(Sample_Date, Free = `Free Chlorine`, Combined = `Combined Chloine`) %>% 
    arrange(Sample_Date) %>% 
    pull(Free) 

combined_column <- mirkwood_Chlorine_data %>% 
   select(Sample_Date, Free = `Free Chlorine`, Combined = `Combined Chloine`) %>% 
    arrange(Sample_Date) %>% 
    pull(Combined) 


# Create a time-series object
free_time_series <- xts(x=free_column, order.by=date_column)
comb_time_series <- xts(x=combined_column, order.by=date_column)

chlorine__time_series <- cbind(free_time_series, comb_time_series)

dygraph(chlorine__time_series, main = "Chlorine", ylab = "Cl (mg/l)") %>%
  dySeries("free_time_series", label = "Free") %>%
  dySeries("comb_time_series", label = "Combined") %>%
  dyOptions(stackedGraph = TRUE) %>%
  dyRangeSelector()

```


## Box Plots



```{r}
#| label: fig-boxmonths
#| fig-cap: "Boxplot of Monthly Temperature (All Years) for Hobbiton WTW"
#| warning: false

# This helps make the Month factor plot in order
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

wtw_data %>% 
  # filter for colour at Hobbiton WTW
  filter(Determinand == "Temperature", Description == "Hobbiton WTW") %>% 
  # create month column and make a factor so plot in the right order
  mutate(Month = lubridate::month(Sample_Date, label = TRUE),
         Month = factor(Month, levels = month_levels, ordered = TRUE)) %>% 
  ggplot(aes(x= Month, y = Result)) +
    geom_boxplot(fill = "steelblue") +
  labs(y = "Water Temerature (\u00B0C)") +
  theme_bw() +
  theme (legend.position = "none",
         axis.text.x = element_text(),
         axis.text.y = element_text(),
         axis.title.y = element_text(),
         axis.title.x = element_blank(),
         panel.grid.minor = element_blank(),
         panel.grid.major.y = element_line(colour = "grey80", linetype = "solid", size = 0.1), 
         panel.grid.minor.y = element_blank(),
         panel.grid.major.x = element_line(colour = "grey80", linetype = "solid", size = 0.1))
  

```


```{r}
#| label: fig-boxmonthyear
#| fig-cap: "Boxplot of Monthly Temperature for Each Year at Hobbiton WTW"
#| warning: false

# This helps make the Month factor plot in order
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

wtw_data %>% 
  # create month column and make a factor so plot in the right order
  mutate(Month = lubridate::month(Sample_Date, label = TRUE),
         Year = lubridate::year(Sample_Date)) %>% 
  # filter for colour at Hobbiton WTW
  filter(Determinand == "Temperature", 
         Description == "Hobbiton WTW",
         Year < 2005) %>% 
  ggplot(aes(x= Month, y = Result, fill = factor(Year))) +
    geom_boxplot() +
  scale_fill_jco() +
  labs(y = "Water Temerature (\u00B0C)",
       fill = "Year") +
  theme_bw() +
  theme (legend.position = "bottom",
         axis.text.x = element_text(),
         axis.text.y = element_text(),
         axis.title.y = element_text(),
         axis.title.x = element_blank(),
         panel.grid.minor = element_blank(),
         panel.grid.major.y = element_line(colour = "grey80", linetype = "solid", size = 0.1), 
         panel.grid.minor.y = element_blank(),
         panel.grid.major.x = element_line(colour = "grey80", linetype = "solid", size = 0.1))
  

```




